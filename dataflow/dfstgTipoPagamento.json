{
	"name": "dfstgTipoPagamento",
	"properties": {
		"folder": {
			"name": "2 - Stage"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "tblsrcTipoPagamento",
						"type": "DatasetReference"
					},
					"name": "srcTipoPagamento"
				},
				{
					"dataset": {
						"referenceName": "tblstgTipoPagamento",
						"type": "DatasetReference"
					},
					"name": "stgTipoPagamento"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "ClassSource"
				},
				{
					"name": "Ativos"
				},
				{
					"name": "NewStage"
				},
				{
					"name": "NewSource"
				},
				{
					"name": "JoinLeft"
				},
				{
					"name": "datIni"
				},
				{
					"name": "NovosRegistros"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          Nome as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcTipoPagamento",
				"source(output(",
				"          Id as integer,",
				"          BK as integer,",
				"          Nome as string,",
				"          DataInicio as date,",
				"          DataFim as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgTipoPagamento",
				"srcTipoPagamento sort(asc(Id, true)) ~> ClassSource",
				"stgTipoPagamento filter(isNull(DataFim)) ~> Ativos",
				"Ativos select(mapColumn(",
				"          Id_STG = Id,",
				"          BK_STG = BK,",
				"          Nome_STG = Nome,",
				"          DataInicio_STG = DataInicio,",
				"          DataFim_STG = DataFim",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NewStage",
				"ClassSource select(mapColumn(",
				"          Id_SRC = Id,",
				"          Nome_SRC = Nome",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> NewSource",
				"NewSource, NewStage join(Id_SRC == BK_STG,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinLeft",
				"JoinLeft derive(DataStartEnd = toDate(currentTimestamp())) ~> datIni",
				"datIni split(isNull(BK_STG),",
				"     (Id_SRC == BK_STG) && (Nome_SRC != Nome_STG),",
				"     (Id_SRC == BK_STG) && (Nome_SRC != Nome_STG),",
				"     disjoint: true) ~> NovosRegistros@(NovoRegistro, Update, Inativos)"
			]
		}
	}
}