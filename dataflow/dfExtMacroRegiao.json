{
	"name": "dfExtMacroRegiao",
	"properties": {
		"folder": {
			"name": "1 - Extraction"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsExtMacroRegioesOrigem",
						"type": "DatasetReference"
					},
					"name": "MacroRegiaoOrigem"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsExtMacroRegiaoDestino",
						"type": "DatasetReference"
					},
					"name": "RegioesSilver"
				}
			],
			"transformations": [
				{
					"name": "dddcidadeestado"
				},
				{
					"name": "splitEstadoCidade"
				},
				{
					"name": "RegioesSeparadas"
				},
				{
					"name": "SelecionarColunasFinais"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MacroRegiaoOrigem",
				"MacroRegiaoOrigem derive(dddCidadeEstado = substring(Column_1, 4, 400)) ~> dddcidadeestado",
				"dddcidadeestado derive(splitdddCidadeEstado = split(dddCidadeEstado,\"â€“\" )) ~> splitEstadoCidade",
				"splitEstadoCidade derive(DDD = trim(splitdddCidadeEstado[1]),",
				"          CIDADE = trim(splitdddCidadeEstado[2]),",
				"          ESTADO = trim(splitdddCidadeEstado[3])) ~> RegioesSeparadas",
				"RegioesSeparadas select(mapColumn(",
				"          DDD,",
				"          CIDADE,",
				"          ESTADO",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelecionarColunasFinais",
				"SelecionarColunasFinais sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string",
				"     ),",
				"     partitionFileNames:['regioes.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> RegioesSilver"
			]
		}
	}
}