{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "dfMarketStar"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dfExtMacroRegiao')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegioesOrigem",
								"type": "DatasetReference"
							},
							"name": "MacroRegiaoOrigem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegiaoDestino",
								"type": "DatasetReference"
							},
							"name": "RegioesSilver"
						}
					],
					"transformations": [
						{
							"name": "dddcidadeestado"
						},
						{
							"name": "splitEstadoCidade"
						},
						{
							"name": "RegioesSeparadas"
						},
						{
							"name": "SelecionarColunasFinais"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MacroRegiaoOrigem",
						"MacroRegiaoOrigem derive(dddCidadeEstado = substring(Column_1, 4, 400)) ~> dddcidadeestado",
						"dddcidadeestado derive(splitdddCidadeEstado = split(dddCidadeEstado,\"–\" )) ~> splitEstadoCidade",
						"splitEstadoCidade derive(DDD = trim(splitdddCidadeEstado[1]),",
						"          CIDADE = left(trim(splitdddCidadeEstado[2]),length(trim(splitdddCidadeEstado[2]))-1),",
						"          ESTADO = trim(splitdddCidadeEstado[3])) ~> RegioesSeparadas",
						"RegioesSeparadas select(mapColumn(",
						"          DDD,",
						"          CIDADE,",
						"          ESTADO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColunasFinais",
						"SelecionarColunasFinais sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string",
						"     ),",
						"     partitionFileNames:['regioes.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RegioesSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtStatusDestino",
								"type": "DatasetReference"
							},
							"name": "Status"
						}
					],
					"transformations": [
						{
							"name": "aggAuxiliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy(Status),",
						"     Contagem = count(Status)) ~> aggAuxiliar",
						"aggAuxiliar select(mapColumn(",
						"          Status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['Status.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Status"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtTipoPagamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtTipoPagamentoDestino",
								"type": "DatasetReference"
							},
							"name": "TipoPagamentoSilver"
						}
					],
					"transformations": [
						{
							"name": "aggAuxliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Tipo de Pagamento}),",
						"     Contagem = count({Tipo de Pagamento})) ~> aggAuxliar",
						"aggAuxliar select(mapColumn(",
						"          {Tipo de Pagamento}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['TipoPagamento.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> TipoPagamentoSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtVendasHotmart')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "VendasHotmart"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartDestino",
								"type": "DatasetReference"
							},
							"name": "VendasHotMartDestinon"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> VendasHotmart",
						"VendasHotmart sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['vendas.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> VendasHotMartDestinon"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtProdutor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtProdutorDestino",
								"type": "DatasetReference"
							},
							"name": "produtorSilver"
						}
					],
					"transformations": [
						{
							"name": "aggAuxiliar",
							"description": "Agregação de dados pela produção de colunas 'Contagem' por 'produtor'"
						},
						{
							"name": "SelecionarColuna",
							"description": "Renomeando aggAuxiliar para SelecionarColuna com as colunas 'Produtor'"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Nome do Produtor}),",
						"     Contagem = count()) ~> aggAuxiliar",
						"aggAuxiliar select(mapColumn(",
						"          {Nome do Produtor}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['produtor.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> produtorSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtAfiliados')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtAfiliados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtAfiliados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcVendas": {},
									"AfiliadoSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtCursos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtCursos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfCursos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CodProdutos": {},
									"CursosSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtMacroRegioes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfMacroRegioes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtMacroRegiao",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MacroRegiaoOrigem": {},
									"RegioesSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtMacroRegiao')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"Status": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtTipoPagamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtTipoPagamento",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtTipoPagamento",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"TipoPagamentoSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtTipoPagamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtVendas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dsExtVendasHotmart",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtVendasHotmart",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VendasHotmart": {},
									"VendasHotMartDestinon": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtVendasHotmart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtProdutor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dsExtProdutorDestino",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtProdutor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"produtorSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtProdutor')]"
			]
		}
	]
}