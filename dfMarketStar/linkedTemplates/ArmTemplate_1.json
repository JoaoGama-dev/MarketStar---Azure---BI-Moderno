{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "dfMarketStar"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/tblstgProdutor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsservmarketstar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					},
					{
						"name": "DataInicio",
						"type": "date"
					},
					{
						"name": "DataFim",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Produtor"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblstgRegioes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsservmarketstar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DDD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cidade",
						"type": "varchar"
					},
					{
						"name": "Estado",
						"type": "varchar"
					},
					{
						"name": "DataInicio",
						"type": "date"
					},
					{
						"name": "DataFim",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Regioes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblstgStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsservmarketstar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					},
					{
						"name": "DataInicio",
						"type": "date"
					},
					{
						"name": "DataFim",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Status"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblstgTipoPagamento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsservmarketstar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					},
					{
						"name": "DataInicio",
						"type": "date"
					},
					{
						"name": "DataFim",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "TipoPagamento"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfCursos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtCodCursosOrigem",
								"type": "DatasetReference"
							},
							"name": "CodProdutos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtCursosDestino",
								"type": "DatasetReference"
							},
							"name": "CursosSilver"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CodProdutos",
						"CodProdutos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['cursos.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> CursosSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtAfiliados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "srcVendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtAfiliadosDestino",
								"type": "DatasetReference"
							},
							"name": "AfiliadoSilver",
							"description": "Adicionar conjunto de dados do coletor a camada Silver no DataLake",
							"rejectedDataLinkedService": {
								"referenceName": "dlMkStar",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "SelecionarColuna"
						},
						{
							"name": "AgregAuxiliar",
							"description": "Adicionar colunas agregadas Afiliados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcVendas",
						"srcVendas select(mapColumn(",
						"          Afiliado",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna aggregate(groupBy(Afiliado),",
						"     Contagem = count(Afiliado)) ~> AgregAuxiliar",
						"AgregAuxiliar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Afiliados.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Afiliado",
						"     ),",
						"     partitionBy('hash', 1)) ~> AfiliadoSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtMacroRegiao')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegioesOrigem",
								"type": "DatasetReference"
							},
							"name": "MacroRegiaoOrigem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegiaoDestino",
								"type": "DatasetReference"
							},
							"name": "RegioesSilver"
						}
					],
					"transformations": [
						{
							"name": "dddcidadeestado"
						},
						{
							"name": "splitEstadoCidade"
						},
						{
							"name": "RegioesSeparadas"
						},
						{
							"name": "SelecionarColunasFinais"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MacroRegiaoOrigem",
						"MacroRegiaoOrigem derive(dddCidadeEstado = substring(Column_1, 4, 400)) ~> dddcidadeestado",
						"dddcidadeestado derive(splitdddCidadeEstado = split(dddCidadeEstado,\"–\" )) ~> splitEstadoCidade",
						"splitEstadoCidade derive(DDD = trim(splitdddCidadeEstado[1]),",
						"          CIDADE = left(trim(splitdddCidadeEstado[2]),length(trim(splitdddCidadeEstado[2]))-1),",
						"          ESTADO = trim(splitdddCidadeEstado[3])) ~> RegioesSeparadas",
						"RegioesSeparadas select(mapColumn(",
						"          DDD,",
						"          CIDADE,",
						"          ESTADO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColunasFinais",
						"SelecionarColunasFinais sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string",
						"     ),",
						"     partitionFileNames:['regioes.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RegioesSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtProdutor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtProdutorDestino",
								"type": "DatasetReference"
							},
							"name": "produtorSilver"
						}
					],
					"transformations": [
						{
							"name": "aggAuxiliar",
							"description": "Agregação de dados pela produção de colunas 'Contagem' por 'produtor'"
						},
						{
							"name": "SelecionarColuna",
							"description": "Renomeando aggAuxiliar para SelecionarColuna com as colunas 'Produtor'"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Nome do Produtor}),",
						"     Contagem = count()) ~> aggAuxiliar",
						"aggAuxiliar select(mapColumn(",
						"          {Nome do Produtor}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['produtor.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> produtorSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtStatusDestino",
								"type": "DatasetReference"
							},
							"name": "Status"
						}
					],
					"transformations": [
						{
							"name": "aggAuxiliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy(Status),",
						"     Contagem = count(Status)) ~> aggAuxiliar",
						"aggAuxiliar select(mapColumn(",
						"          Status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['Status.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Status"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtTipoPagamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "Vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtTipoPagamentoDestino",
								"type": "DatasetReference"
							},
							"name": "TipoPagamentoSilver"
						}
					],
					"transformations": [
						{
							"name": "aggAuxliar"
						},
						{
							"name": "SelecionarColuna"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Vendas",
						"Vendas aggregate(groupBy({Tipo de Pagamento}),",
						"     Contagem = count({Tipo de Pagamento})) ~> aggAuxliar",
						"aggAuxliar select(mapColumn(",
						"          {Tipo de Pagamento}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelecionarColuna",
						"SelecionarColuna sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['TipoPagamento.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> TipoPagamentoSilver"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtVendasHotmart')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extraction"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartOrigem",
								"type": "DatasetReference"
							},
							"name": "VendasHotmart"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtVendasHotmartDestino",
								"type": "DatasetReference"
							},
							"name": "VendasHotMartDestinon"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> VendasHotmart",
						"VendasHotmart sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Afiliado as string",
						"     ),",
						"     partitionFileNames:['vendas.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> VendasHotMartDestinon"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcAfiliados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtAfiliadosDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcAfiliados",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Afiliado as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = Afiliado",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcCursos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtCursosDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcCursos",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Cod as string,",
						"          {Nome Novo} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          BK as string,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          BK = Cod,",
						"          Nome = {Nome Novo}",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcProdutor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtProdutorDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcProdutor",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {Nome do Produtor} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = {Nome do Produtor}",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcRegioes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegiaoDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcRegioes",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          DDD as short,",
						"          CIDADE as string,",
						"          ESTADO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          DDD as integer,",
						"          Cidade as string,",
						"          Estado as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          DDD,",
						"          Cidade = CIDADE,",
						"          Estado = ESTADO",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtStatusDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcStatus",
								"type": "DatasetReference"
							},
							"name": "srcDestino"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = Status",
						"     )) ~> srcDestino"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcTipoPagamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtTipoPagamentoDestino",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcTipoPagamento",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {Tipo de Pagamento} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = {Tipo de Pagamento}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfstgAfiliados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tblsrcAfiliados",
								"type": "DatasetReference"
							},
							"name": "srcAfiliados"
						},
						{
							"dataset": {
								"referenceName": "tblstgAfiliados",
								"type": "DatasetReference"
							},
							"name": "stgAfiliados"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblstgAfiliados",
								"type": "DatasetReference"
							},
							"name": "StageNew"
						}
					],
					"transformations": [
						{
							"name": "ClassSource"
						},
						{
							"name": "NewSource"
						},
						{
							"name": "Ativos"
						},
						{
							"name": "ClassStage"
						},
						{
							"name": "NewStage"
						},
						{
							"name": "JoinLeft"
						},
						{
							"name": "DataIni"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> srcAfiliados",
						"source(output(",
						"          Id as integer,",
						"          BK as integer,",
						"          Nome as string,",
						"          DataInicio as date,",
						"          DataFim as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> stgAfiliados",
						"srcAfiliados sort(asc(Id, true)) ~> ClassSource",
						"ClassSource select(mapColumn(",
						"          Id_SRC = Id,",
						"          Nome_SRC = Nome",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NewSource",
						"stgAfiliados filter(isNull(DataFim)) ~> Ativos",
						"Ativos sort(asc(BK, true)) ~> ClassStage",
						"ClassStage select(mapColumn(",
						"          Id_STG = Id,",
						"          BK_STG = BK,",
						"          Nome_STG = Nome,",
						"          DataInicio_STG = DataInicio,",
						"          DataFim_STG = DataFim",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> NewStage",
						"NewSource, NewStage join(Id_SRC == BK_STG,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinLeft",
						"JoinLeft derive(DataStarEnd = currentDate()) ~> DataIni",
						"DataIni split(isNull(BK_STG),",
						"     disjoint: false) ~> split1@(NovoRegistro)",
						"split1@NovoRegistro sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          BK as integer,",
						"          Nome as string,",
						"          DataInicio as date,",
						"          DataFim as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          BK = Id_SRC,",
						"          Nome = Nome_SRC,",
						"          DataInicio = DataStarEnd",
						"     )) ~> StageNew"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtAfiliados')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtAfiliados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtAfiliados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcVendas": {},
									"AfiliadoSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtAfiliados')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtCursos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtCursos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfCursos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CodProdutos": {},
									"CursosSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfCursos')]"
			]
		}
	]
}